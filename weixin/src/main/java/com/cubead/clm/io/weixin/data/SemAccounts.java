package com.cubead.clm.io.weixin.data;

// Generated 2017-5-20 18:03:09 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * SemAccounts generated by hbm2java
 */
@Entity
@Table(name = "sem_accounts", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "client_code", "utm_source",
				"account" }),
		@UniqueConstraint(columnNames = "authorizer_appid") })
public class SemAccounts implements java.io.Serializable {

	private Long tenantId;
	private String clientCode;
	private String utmSource;
	private String account;
	private String password;
	private Boolean isActive;
	private String comment;
	private String authorizerAppid;
	private Date update;
	private String authorizerRefreshToken;
	private String authorizerAccessToken;

	public SemAccounts() {
	}

	public SemAccounts(Long tenantId, String clientCode, String utmSource,
			String account, String password, Boolean isActive) {
		this.tenantId = tenantId;
		this.clientCode = clientCode;
		this.utmSource = utmSource;
		this.account = account;
		this.password = password;
		this.isActive = isActive;
	}

	public SemAccounts(Long tenantId, String clientCode, String utmSource,
			String account, String password, Boolean isActive, String comment,
			String authorizerAppid, Date update, String authorizerRefreshToken,
			String authorizerAccessToken) {
		this.tenantId = tenantId;
		this.clientCode = clientCode;
		this.utmSource = utmSource;
		this.account = account;
		this.password = password;
		this.isActive = isActive;
		this.comment = comment;
		this.authorizerAppid = authorizerAppid;
		this.update = update;
		this.authorizerRefreshToken = authorizerRefreshToken;
		this.authorizerAccessToken = authorizerAccessToken;
	}

	@Id
	@Column(name = "tenant_id", unique = true, nullable = false)
	public Long getTenantId() {
		return this.tenantId;
	}

	public void setTenantId(Long tenantId) {
		this.tenantId = tenantId;
	}

	@Column(name = "client_code", nullable = false)
	public String getClientCode() {
		return this.clientCode;
	}

	public void setClientCode(String clientCode) {
		this.clientCode = clientCode;
	}

	@Column(name = "utm_source", nullable = false)
	public String getUtmSource() {
		return this.utmSource;
	}

	public void setUtmSource(String utmSource) {
		this.utmSource = utmSource;
	}

	@Column(name = "account", nullable = false)
	public String getAccount() {
		return this.account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "is_active", nullable = false)
	public Boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "comment")
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "authorizer_appid", unique = true)
	public String getAuthorizerAppid() {
		return this.authorizerAppid;
	}

	public void setAuthorizerAppid(String authorizerAppid) {
		this.authorizerAppid = authorizerAppid;
	}

	@Column(name = "update", columnDefinition= "TIMESTAMP WITH TIME ZONE")
	@Temporal(TemporalType.TIMESTAMP)
	public Date getUpdate() {
		return this.update;
	}

	public void setUpdate(Date update) {
		this.update = update;
	}

	@Column(name = "authorizer_refresh_token")
	public String getAuthorizerRefreshToken() {
		return this.authorizerRefreshToken;
	}

	public void setAuthorizerRefreshToken(String authorizerRefreshToken) {
		this.authorizerRefreshToken = authorizerRefreshToken;
	}

	@Column(name = "authorizer_access_token")
	public String getAuthorizerAccessToken() {
		return this.authorizerAccessToken;
	}

	public void setAuthorizerAccessToken(String authorizerAccessToken) {
		this.authorizerAccessToken = authorizerAccessToken;
	}

}
